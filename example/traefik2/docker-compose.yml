# This is an example docker-compose file.
# It will not run without configuring a working application.yamlwith your credentials from Auth0.
# Have a look at the files in the example directory as a starting point how to create the two files.
#
# Using Docker-Compose and Dynamic configuration with Docker provider in Traefik, auto discovery of
# running containers will register containers according to the configuration with labels.
# See https://docs.traefik.io/v2.0/reference/dynamic-configuration/docker/ for possible config.
version: '2.4'
services:
  traefik:
    image: traefik:v2.0-alpine
    ports:
      - 80:80
      - 8081
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./:/etc/traefik
    labels:
      - "traefik.http.middlewares.my-auth.ForwardAuth.address=http://host.docker.internal:8080/authorize"
      - "traefik.http.middlewares.my-auth.ForwardAuth.AuthResponseHeaders=X-FORWARDAUTH-NAME, X-FORWARDAUTH-SUB, X-FORWARDAUTH-EMAIL"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.example.test`)"
      - "traefik.HTTP.Services.dashboard.LoadBalancer.server.Port=8080"
      - "traefik.http.routers.dashboard.middlewares=my-auth"

  whoami:
    image: containous/whoami
    labels:
      - "traefik.http.routers.whoami.rule=Host(`whoami.example.test`)"
      - "traefik.http.routers.whoami.middlewares=my-auth"

  www:
    image: dniel/blogr-www
    labels:
      - "traefik.http.routers.www.middlewares=my-auth"
      - "traefik.http.routers.www.rule=Host(`www.example.test`)"

  graphql:
    image: dniel/api-graphql
    labels:
      - "traefik.http.routers.graphql.rule=Host(`graphql.example.test`)"
      - "traefik.http.routers.graphql.middlewares=my-auth"

#################################################################
# ForwardAuth service.
# This is used when running the whole stack in docker-compose.
#
# Not very suitable for development of ForwardAuth because of 
# the long code round trip with alot of steps to update the 
# docker container with a new version. 
#  - compile 
#  - assemble new docker image
#  - restart docker-compose 
#  - test
#  - fix problems found
#  - repeat from step 1 until satisfied.
# 
# In development mode, use the File provider to point
# auth.example.test to your development environment 
# on your local machine where you can update the code faster.
#################################################################
#  auth:
#    image: dniel/forwardauth
#    mem_limit: 512m
#    mem_reservation: 256m
#    ports:
#      - 8080
#    labels:
#      - "traefik.http.routers.auth.rule=Host(`auth.example.test`)"
#    volumes:
#      - ../../config/application.yaml:/config/application.yaml
