[accessLog]
# with nothing

[entryPoints]
   [entryPoints.http]
    address = ":80"
	
   [entryPoints.traefik]
    address=":8081"

# This will configure forward auth on all http endpoints.
#   [entryPoints.http.auth.forward]
#	address = "http://127.0.0.1:8080/authorize"
#	authResponseHeaders = ["X-FORWARDAUTH-NAME", "X-FORWARDAUTH-SUB", "X-FORWARDAUTH-EMAIL"]


[api]
entrypoint="traefik"

[file]
[backends]
    [backends.oauth.servers.server0]
    url = "http://127.0.0.1:8080"

    [backends.whoami.servers.server0]
    url = "http://127.0.0.1:80"

[frontends]
  # OAuth frontend
  [frontends.oauth]
    entryPoints = ["http"]
	priority = 9999999
    backend = "oauth"
	passHostHeader = true

    [frontends.oauth.routes.route0]
	rule = "PathPrefixStrip:/oauth2"

  # whoami
  [frontends.whoami]
    entryPoints = ["http"]
    backend = "whoami"
	priority = 1
	passHostHeader = true

   [frontends.whoami.auth.forward]
	address = "http://127.0.0.1:8080/authorize"
    authResponseHeaders = ["X-FORWARDAUTH-NAME", "X-FORWARDAUTH-SUB", "X-FORWARDAUTH-EMAIL"]

   [frontends.whoami.routes.route0]
    rule = "Host:whoami.example.test"

# If you start the application with docker-compose up, and want to use
# Traefik auto discovery of containers running, then you could just add something like this instead.
#
# [entryPoints]
#   [entryPoints.http]
#   address = ":80"
#
#   [entryPoints.traefik]
#   address = ":8081"
#
# [api]
# entrypoint = "traefik"
#
# [docker]
# endpoint = "unix:///var/run/docker.sock"
# watch = true
# exposedbydefault = false